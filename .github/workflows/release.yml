name: Release

on:
  push:
    tags:
      - '*'

jobs:
  release-client:
    name: Release Client as ${{ matrix.build-type }} (${{ matrix.platform }})
    runs-on: ${{ matrix.os }}
    
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            platform: android
            build-type: apk
          - os: windows-latest
            platform: windows
            build-type: windows
          - os: ubuntu-latest
            platform: linux
            build-type: debian
          - os: ubuntu-latest
            platform: web
            build-type: web
          - os: macos-14
            platform: macos
            build-type: macos
#          - os: macos-14
#            platform: ios
#            build-type: ipa
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.5'
          channel: 'stable'
      - uses: actions/setup-java@v4
        if: matrix.platform == 'android'
        with:
          # AGP8 needs JDK 17
          distribution: 'temurin'
          java-version: '17'
      - run: cp cptclient-template.yaml cptclient.yaml
        shell: bash
      - name: Build
        uses: oberhauser-dev/flutter-release-action@v0
        with:
          dry-run: true
          app-name: 'cptclient'
          app-version: ${{ github.ref_name }}
          tag: ${{ github.ref }}
          build-type: ${{ matrix.build-type }}
          token: ${{ github.token }}
          build-args: |-
            --dart-define=SERVER_SCHEME=https
            --dart-define=SERVER_HOST=cptserver.oberhauser.dev
            --dart-define=SERVER_PORT=443
          android-keystore-file-base64: ${{ secrets.ANDROID_KEYSTORE }}
          android-keystore-password: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          android-key-alias: ${{ secrets.ANDROID_KEY_ALIAS }}
          android-key-password: ${{ secrets.ANDROID_KEY_PASSWORD }}

  publish-client:
    if: false # Disable until credentials are available
    needs: release-client
    name: Publish Client on ${{ matrix.publish-distributor }} (${{ matrix.platform }})
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            platform: android
            publish-distributor: android-google-play
          - os: ubuntu-latest
            platform: web
            publish-distributor: web-server

    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.5'
          channel: 'stable'
      - uses: actions/setup-java@v4
        if: matrix.platform == 'android'
        with:
          # AGP8 needs JDK 17
          distribution: 'temurin'
          java-version: '17'
      - run: cp cptclient-template.yaml cptclient.yaml
        shell: bash
      - name: Publish
        uses: oberhauser-dev/flutter-release-action@v0
        with:
          dry-run: true
          app-name: 'cptclient'
          app-version: ${{ github.ref_name }}
          tag: ${{ github.ref }}
          token: ${{ github.token }}
          build-args: |-
            --dart-define=SERVER_SCHEME=https
            --dart-define=SERVER_HOST=cptserver.oberhauser.dev
            --dart-define=SERVER_PORT=443
          publish-stage: internal
          publish-distributor: ${{ matrix.publish-distributor }}
          # Android
          publish-android-fastlane-secrets-json-base64: ${{ secrets.ANDROID_GOOGLE_PLAY_JSON }}
          android-keystore-file-base64: ${{ secrets.ANDROID_KEYSTORE }}
          android-keystore-password: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          android-key-alias: ${{ secrets.ANDROID_KEY_ALIAS }}
          android-key-password: ${{ secrets.ANDROID_KEY_PASSWORD }}
          # Web
          publish-web-host: ${{ secrets.WEB_HOST }}
          publish-web-path: ${{ secrets.WEB_PATH }}
          publish-web-ssh-port: ${{ secrets.WEB_SSH_PORT }}
          publish-web-ssh-user: ${{ secrets.WEB_SSH_USER }}
          publish-web-ssh-private-key-base64: ${{ secrets.WEB_SSH_PRIVATE_KEY }}
